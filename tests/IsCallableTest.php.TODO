<?php
declare(strict_types=1);

/* These are tests from Locutus for porting
TODO: implement adding automatically (if it's possible)

Array
(
    [code] => is_callable('is_callable')
    [returns] => true
)
Array
(
    [code] => is_callable('bogusFunction', true)
    [returns] => true // gives true because does not do strict checking
)
Array
(
    [code] => function SomeClass () {}
SomeClass.prototype.someMethod = function (){}
var testObj = new SomeClass()
is_callable([testObj, 'someMethod'], true, 'myVar')
var $result = myVar
    [returns] => 'SomeClass::someMethod'
)
Array
(
    [code] => is_callable(function () {})
    [returns] => true
)
*/
class IsCallable extends PHPUnit\Framework\TestCase
{
    public function test()
    {
        $input = ['test1', 'tEsT2', 'TEST3'];
        $actual = \Zubr\is_callable(/* put stuff here */);
        $expected = \is_callable(/* put stuff here */);

        $this->assertEquals($expected, $actual);
    }
}